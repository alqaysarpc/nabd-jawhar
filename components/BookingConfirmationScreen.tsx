import React, { useState, useEffect } from 'react';
import { ArrowRightIcon, UserGroupIcon, CalendarDaysIcon, UserIcon as HeroUserIcon, PhoneIcon as HeroPhoneIcon } from '@heroicons/react/24/outline';
import { StarIcon } from '@heroicons/react/24/solid';
import LoadingSpinner from './LoadingSpinner';
import { HeartIcon, StethoscopeIcon, BeakerIcon, MapPinIcon, ClockIcon, SparklesIcon, CheckCircleIcon, UsersIcon } from './icons';
import { Nurse, Service, BookingConfirmationDetails } from '../types';


const allServicesData: Service[] = [
    // General Nursing
    { id: 'gen-injection', name: 'ุฅุนุทุงุก ุญููุฉ (ุถุฑุจ ุฅุจุฑุฉ)', description: 'ุฅุนุทุงุก ุงูุญูู ุงูุนุถููุฉ ุฃู ุงููุฑูุฏูุฉ ุญุณุจ ุงููุตูุฉ ุงูุทุจูุฉ.', icon: <span className="text-2xl">๐</span>, category: 'ุฎุฏูุงุช ุงูุชูุฑูุถ ุงูุนุงูุฉ', longDescription: 'ุฎุฏูุฉ ุขููุฉ ูุงุญุชุฑุงููุฉ ูุฅุนุทุงุก ุงูุญูู ุจุฃููุงุนูุง (ุนุถูุ ูุฑูุฏุ ุชุญุช ุงูุฌูุฏ) ุจูุงุกู ุนูู ูุตูุฉ ุทุจูุฉ. ุงูุณุนุฑ ุงูููุถุญ ููู ุญููุฉ.', priceRange: '1,000 ๏ทผ', requirements: ['ูุตูุฉ ุทุจูุฉ ุญุฏูุซุฉ', 'ุชููุฑ ุงูุฏูุงุก ุงููุทููุจ'] },
    { id: 'gen-vitals', name: 'ููุงุณ ุถุบุท ุงูุฏู', description: 'ููุงุณ ุฏููู ูุถุบุท ุงูุฏู ูุชูุฏูู ูุฑุงุกุฉ ููุชุงุจุนุฉ.', icon: <HeartIcon className="w-6 h-6" />, category: 'ุฎุฏูุงุช ุงูุชูุฑูุถ ุงูุนุงูุฉ', longDescription: 'ูุญุต ุฏููู ูุถุบุท ุงูุฏู ุจุงุณุชุฎุฏุงู ุฌูุงุฒ ุฅููุชุฑููู ุฃู ุฒุฆุจููุ ูุน ุชุณุฌูู ุงููุฑุงุกุฉ ูุชูุฏูู ุฅุฑุดุงุฏุงุช ุฃูููุฉ ูููุฑูุถ. ุงูุณุนุฑ ููู ุฒูุงุฑุฉ.', priceRange: '800 ๏ทผ', requirements: ['ููุงู ูุงุฏุฆ ููุฑูุญ ูููุฑูุถ'] },
    { id: 'gen-glucose', name: 'ููุงุณ ุงูุณูุฑ', description: 'ููุงุณ ูุณุชูู ุงูุณูุฑ ูู ุงูุฏู ูุชูุฏูู ุฅุฑุดุงุฏุงุช.', icon: <span className="text-2xl">๐ฉธ</span>, category: 'ุฎุฏูุงุช ุงูุชูุฑูุถ ุงูุนุงูุฉ', longDescription: 'ูุญุต ุณุฑูุน ูุฏููู ููุณุชูู ุงูุฌููููุฒ ูู ุงูุฏู ุจุงุณุชุฎุฏุงู ุฃุญุฏุซ ุงูุฃุฌูุฒุฉ. ูุชู ุชูุฏูู ุฅุฑุดุงุฏุงุช ุฃูููุฉ ุจูุงุกู ุนูู ุงููุฑุงุกุฉ. ุงูุณุนุฑ ููู ุฒูุงุฑุฉ.', priceRange: '800 ๏ทผ', requirements: ['ููุถู ุฃู ูููู ุงููุฑูุถ ุตุงุฆูุงู ุฃู ุญุณุจ ุชุนูููุงุช ุงูุทุจูุจ'] },
    { id: 'gen-wound', name: 'ุงูุนูุงูุฉ ุจุงูุฌุฑูุญ', description: 'ุชูุธูู ูุชุถููุฏ ูุชุบููุฑ ุนูู ุงูุฌุฑูุญ ุงููุฎุชููุฉ.', icon: <span className="text-2xl">๐ฉน</span>, category: 'ุฎุฏูุงุช ุงูุชูุฑูุถ ุงูุนุงูุฉ', longDescription: 'ุฎุฏูุฉ ูุชุฎุตุตุฉ ููุนูุงูุฉ ุจุงูุฌุฑูุญ ุงูุญุงุฏุฉ ูุงููุฒููุฉ. ูุดูู ุงูุณุนุฑ ุชูุธูู ูุชุถููุฏ ุงูุฌุฑูุญ (1200 ๏ทผ) ููุฏ ูุตู ุฅูู 1500 ๏ทผ ูุชุบููุฑ ุฌุฑุญ ูุนูุฏ ุญุณุจ ุญุฌูู.', priceRange: '1,200 - 1,500 ๏ทผ', requirements: ['ุชูููู ูุจุฏุฆู ูููุน ุงูุฌุฑุญ', 'ุชูููุฑ ุงูููุงุฏ ูุงูุถูุงุฏุงุช ุงูููุตููุฉ'] },
    
    // Specialized Care
    { id: 'spec-postop', name: 'ุฑุนุงูุฉ ูุง ุจุนุฏ ุงูุนูููุงุช', description: 'ูุชุงุจุนุฉ ุงูุญุงูุฉ ุจุนุฏ ุงูุฌุฑุงุญุฉ. (2-6 ุณุงุนุงุช)', icon: <span className="text-2xl">๐จ</span>, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ูุชุงุจุนุฉ ุฏูููุฉ ูููุฑูุถ ูู ูุชุฑุฉ ุงูููุงูุฉ ุจุนุฏ ุงูุนูููุงุช ุงูุฌุฑุงุญูุฉุ ูุชุดูู ุงูุนูุงูุฉ ุจุงูุฌุฑุญุ ุฅุฏุงุฑุฉ ุงูุฃููุ ูุงููุณุงุนุฏุฉ ุนูู ุงูุญุฑูุฉ. ุงููุฏุฉ ุงููููุฐุฌูุฉ ูู 2-6 ุณุงุนุงุช. ุงูุณุนุฑ ูุนุชูุฏ ุนูู ุญุงูุฉ ุงููุฑูุถ.', priceRange: '1,500 ๏ทผ / ุณุงุนุฉ', requirements: ['ุชูุฑูุฑ ุทุจู ุนู ุงูุนูููุฉ', 'ุชุนูููุงุช ุงูุฎุฑูุฌ ูู ุงููุณุชุดูู'] },
    { id: 'spec-chronic', name: 'ุฑุนุงูุฉ ุฃูุฑุงุถ ูุฒููุฉ', description: 'ูุชุงุจุนุฉ ุญุงูุงุช ุงูุณูุฑู ูุงูุถุบุท ูุงูููุจ. (3-8 ุณุงุนุงุช)', icon: <HeartIcon className="w-6 h-6 text-red-500" />, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ุจุฑุงูุฌ ูุชุงุจุนุฉ ุฏูุฑูุฉ ูููุฑุถู ุงูุฐูู ูุนุงููู ูู ุฃูุฑุงุถ ูุฒููุฉ (ูุซู ุงูุณูุฑูุ ุงูุถุบุทุ ุงูููุจ)ุ ุชูุฏู ุฅูู ุงูุชุญูู ูู ุงูุญุงูุฉ ูููุน ุงููุถุงุนูุงุช. ุงููุฏุฉ ุงููููุฐุฌูุฉ ูู 3-8 ุณุงุนุงุช.', priceRange: '1,200 ๏ทผ / ุณุงุนุฉ', requirements: ['ุฎุทุฉ ุนูุงุฌูุฉ ูู ุงูุทุจูุจ ุงููุนุงูุฌ', 'ุณุฌู ูุฑุงุกุงุช ุญุฏูุซ'] },
    { id: 'spec-dialysis', name: 'ุชุตููุฉ ุฏูุฑูุฉ (ุบุณูู ูููู)', description: 'ูุฑุงูุจุฉ ููุชุงุจุนุฉ ุฃุซูุงุก ุฌูุณุงุช ุบุณูู ุงูููู. (4-6 ุณุงุนุงุช)', icon: <BeakerIcon className="w-6 h-6" />, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ุฎุฏูุฉ ูุฑุงููุฉ ููุฑุงูุจุฉ ูููุฑุถู ุฃุซูุงุก ุฌูุณุงุช ุบุณูู ุงูููู ุงูููุฒููุฉ ุฃู ูู ุงููุฑูุฒุ ุชุดูู ุงููุฑุงูุจุฉ ูุงููุชุงุจุนุฉ ุงูุฏูููุฉ. ุงููุฏุฉ ุงููููุฐุฌูุฉ ูู 4-6 ุณุงุนุงุช.', priceRange: '2,000 ๏ทผ / ุณุงุนุฉ', requirements: ['ุชูุฑูุฑ ุทุจู ุจุงูุญุงูุฉ', 'ุฌุฏูู ููุงุนูุฏ ุงูุฌูุณุงุช'] },
    { id: 'spec-elderly', name: 'ุฑุนุงูุฉ ูุจุงุฑ ุงูุณู', description: 'ุชุดูู ุงููุธุงูุฉ ูุงููุฑุงููุฉ. (ุญุณุจ ุงูุทูุจ)', icon: <span className="text-2xl">๐ต</span>, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ูููุฑ ุฑุนุงูุฉ ุดุงููุฉ ููุฎุตุตุฉ ููุจุงุฑ ุงูุณู ูู ููุงุฒูููุ ุชุดูู ุงููุณุงุนุฏุฉ ูู ุงููุธุงูุฉ ุงูุดุฎุตูุฉุ ุชูุงูู ุงูุฃุฏููุฉุ ุงููุณุงุนุฏุฉ ุนูู ุงูุญุฑูุฉุ ูุงููุฑุงููุฉ. ุงููุฏุฉ ุญุณุจ ุงูุทูุจ.', priceRange: '1,000 ๏ทผ / ุณุงุนุฉ', requirements: ['ุชูููู ุฃููู ููุญุงูุฉ', 'ุฎุทุฉ ุฑุนุงูุฉ ูุงุถุญุฉ'] },
    { id: 'spec-maternity', name: 'ุฑุนุงูุฉ ุญุงูุงุช ุงูููุงุฏุฉ', description: 'ุฑุนุงูุฉ ููุฃู ูุจู ูุจุนุฏ ุงูููุงุฏุฉ. (6-12 ุณุงุนุฉ)', icon: <span className="text-2xl">๐คฑ</span>, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ุชูุฏูู ุงูุฏุนู ูุงูุฑุนุงูุฉ ููุฃู ูู ูุชุฑุฉ ูุง ูุจู ููุง ุจุนุฏ ุงูููุงุฏุฉุ ุจูุง ูู ุฐูู ุงููุณุงุนุฏุฉ ูู ุงูุนูุงูุฉ ุจุงูููููุฏ ุงูุฌุฏูุฏ ููุชุงุจุนุฉ ุตุญุฉ ุงูุฃู. ุงููุฏุฉ ุงููููุฐุฌูุฉ ูู 6-12 ุณุงุนุฉ.', priceRange: '2,500 ๏ทผ / ุณุงุนุฉ', requirements: ['ุชุนูููุงุช ุงูุทุจูุจ ุฃู ุงููุณุชุดูู', 'ูุนูููุงุช ุนู ุตุญุฉ ุงูุฃู ูุงูููููุฏ'] },
    { id: 'spec-escort', name: 'ูุฑุงููุฉ ุทุจูุฉ ูููุณุชุดูู', description: 'ูุดูู ุงูุชููู ูุงููุฑุงููุฉ ููููุงุนูุฏ. (ุญุณุจ ุงูุทูุจ)', icon: <span className="text-2xl">๐</span>, category: 'ุงูุฑุนุงูุฉ ุงููุชุฎุตุตุฉ', longDescription: 'ูุฑุงููุฉ ุงููุฑูุถ ูู ูุฅูู ุงููุณุชุดูู ููููุงุนูุฏ ุฃู ุงููุญูุตุงุชุ ูุน ุชูุฏูู ุงูุฏุนู ุงููุงุฒู ุฃุซูุงุก ุงูุงูุชุธุงุฑ ูุงูุชููู. ุงููุฏุฉ ุญุณุจ ุงูุทูุจ.', priceRange: '1,000 ๏ทผ / ุณุงุนุฉ', requirements: ['ูุนูููุงุช ุงูููุนุฏ ุงูุทุจู', 'ุชูุงุฑูุฑ ุทุจูุฉ ุณุงุจูุฉ ุฅุฐุง ูุฒู ุงูุฃูุฑ'] },

    // Advanced Services
    { id: 'adv-iv', name: 'ุฅุนุทุงุก ูุญููู ูุฑูุฏู', description: 'ุชุฑููุจ ููุชุงุจุนุฉ ุงููุญุงููู ุงููุฑูุฏูุฉ ุงูููุตููุฉ.', icon: <StethoscopeIcon className="w-6 h-6" />, category: 'ุงูุฎุฏูุงุช ุงููุชูุฏูุฉ', longDescription: 'ุชุฑููุจ ุงููุงููููุง ูุฅุนุทุงุก ุงููุญุงููู ุงููุฑูุฏูุฉ ูุงูุฃุฏููุฉ ุงูุชู ุชุชุทูุจ ุงูุชุณุฑูุจ ุงููุฑูุฏู. ุงูุณุนุฑ ููู ููุณ ูุญููู.', priceRange: '2,000 ๏ทผ', requirements: ['ูุตูุฉ ุทุจูุฉ ุจุงูููุน ูุงููููุฉ', 'ุชููุฑ ุงููุญููู ูุงูุฏูุงุก'] },
    { id: 'adv-catheter', name: 'ุชุฑููุจ ูุณุทุฑุฉ ุจูููุฉ', description: 'ุชุฑููุจ ูุชุบููุฑ ุงููุณุทุฑุฉ ุงูุจูููุฉ ุจุฃููุงุนูุง.', icon: <StethoscopeIcon className="w-6 h-6" />, category: 'ุงูุฎุฏูุงุช ุงููุชูุฏูุฉ', longDescription: 'ุฎุฏูุฉ ุชุฑููุจ ุฃู ุงุณุชุจุฏุงู ุงููุณุทุฑุฉ ุงูุจูููุฉ ูููุฑุถู ุงูุฐูู ูุญุชุงุฌูููุงุ ูุน ุงุชุจุงุน ุฅุฌุฑุงุกุงุช ุงูุชุนููู ุงูุตุงุฑูุฉ. ุงูุณุนุฑ ูุดูู ุงูุฃุฏูุงุช ุงูุฃุณุงุณูุฉ.', priceRange: '2,500 ๏ทผ', requirements: ['ุทูุจ ุทุจู', 'ุชููุฑ ุงููุณุทุฑุฉ ุงูููุงุณุจุฉ'] },
    { id: 'adv-catheter-remove', name: 'ุฅุฒุงูุฉ ูุณุทุฑุฉ ุจูููุฉ', description: 'ุฅุฒุงูุฉ ุงููุณุทุฑุฉ ุงูุจูููุฉ ุจุฃูุงู ูุณูููุฉ.', icon: <StethoscopeIcon className="w-6 h-6" />, category: 'ุงูุฎุฏูุงุช ุงููุชูุฏูุฉ', longDescription: 'ุฎุฏูุฉ ูุฅุฒุงูุฉ ุงููุณุทุฑุฉ ุงูุจูููุฉ ุจุฃูุงู ูุณูููุฉ ูู ูุจู ููุฑุถ ูุฎุชุตุ ูุน ุงูุชุฃูุฏ ูู ุฑุงุญุฉ ุงููุฑูุถ.', priceRange: '1,000 ๏ทผ', requirements: ['ุทูุจ ุทุจู ุฃู ููุนุฏ ูุชุงุจุนุฉ'] },
    { id: 'adv-cannula', name: 'ุชุฑููุจ ูุงููููุง', description: 'ุชุฑููุจ ุฅุจุฑุฉ ูุฑูุฏูุฉ (ูุงููููุง).', icon: <StethoscopeIcon className="w-6 h-6" />, category: 'ุงูุฎุฏูุงุช ุงููุชูุฏูุฉ', longDescription: 'ุชุฑููุจ ุฅุจุฑุฉ ูุฑูุฏูุฉ (ูุงููููุง) ุจุดูู ุขูู ูุงุญุชุฑุงูู ููุจุฏุก ูู ุฅุนุทุงุก ุงููุญุงููู ุฃู ุงูุฃุฏููุฉ ุงููุฑูุฏูุฉ.', priceRange: '1,000 ๏ทผ', requirements: ['ุทูุจ ุทุจู'] },
    { id: 'adv-sample', name: 'ุณุญุจ ุนููุงุช ูุฎุจุฑูุฉ', description: 'ุณุญุจ ุนููุงุช ุงูุฏู ูุงูุจูู ูุฅุฌุฑุงุก ุงูุชุญุงููู ุงููุงุฒูุฉ.', icon: <BeakerIcon className="w-6 h-6" />, category: 'ุงูุฎุฏูุงุช ุงููุชูุฏูุฉ', longDescription: 'ุณุญุจ ุนููุงุช ุงูุฏู ูู ุงููุฑูุฏ ุฃู ุนููุงุช ุฃุฎุฑู ุญุณุจ ุทูุจ ุงูุทุจูุจุ ูุชุฌููุฒูุง ูุฅุฑุณุงููุง ุฅูู ุงููุฎุชุจุฑ. ุงูุฎุฏูุฉ ุชููุฑ ุนูุงุก ุงูุฐูุงุจ ุฅูู ุงููุฎุชุจุฑ ุฎุงุตุฉ ููุจุงุฑ ุงูุณู ูุบูุฑ ุงููุงุฏุฑูู ุนูู ุงูุญุฑูุฉ.', priceRange: '5,000 - 8,000 ๏ทผ', requirements: ['ุทูุจ ุงูุชุญููู ูู ุงูุทุจูุจ', 'ุงูุงูุชุฒุงู ุจุดุฑูุท ุงูุตูุงู ุฅุฐุง ูุฒู ุงูุฃูุฑ'] },
];

const mockNurses: Nurse[] = [
    { id: 1, name: 'ุฃุญูุฏ ุฎุงูุฏ', img: 'https://picsum.photos/seed/nurse1/100/100', rating: 4.9, specialty: 'ุฎุฏูุงุช ุงูุชูุฑูุถ ุงูุนุงูุฉ', experience: 7, availability: 'available', languages: ['ุงูุนุฑุจูุฉ', 'ุงูุฅูุฌููุฒูุฉ'], arrivalTime: 25 },
    { id: 2, name: 'ููุฑุฉ ูุญูุฏ', img: 'https://picsum.photos/seed/nurse2/100/100', rating: 4.8, specialty: 'ุฑุนุงูุฉ ุฃูุฑุงุถ ูุฒููุฉ', experience: 5, availability: 'busy', languages: ['ุงูุนุฑุจูุฉ'], arrivalTime: 45 },
    { id: 3, name: 'ุณุงุฑุฉ ุนุจุฏุงููู', img: 'https://picsum.photos/seed/nurse3/100/100', rating: 4.7, specialty: 'ุงูุนูุงูุฉ ุจุงูุฌุฑูุญ', experience: 6, availability: 'available', languages: ['ุงูุนุฑุจูุฉ'], arrivalTime: 15 },
    { id: 4, name: 'ุฎุงูุฏ ุงูุบุงูุฏู', img: 'https://picsum.photos/seed/nurse4/100/100', rating: 4.9, specialty: 'ุฑุนุงูุฉ ูุจุงุฑ ุงูุณู', experience: 10, availability: 'offline', languages: ['ุงูุนุฑุจูุฉ', 'ุงูุฅูุฌููุฒูุฉ'], arrivalTime: 0 },
    { id: 5, name: 'ูุงุทูุฉ ุงูุฒูุฑุงูู', img: 'https://picsum.photos/seed/nurse5/100/100', rating: 4.6, specialty: 'ุฑุนุงูุฉ ุฃุทูุงู', experience: 4, availability: 'available', languages: ['ุงูุนุฑุจูุฉ'], arrivalTime: 35 },
];

interface BookingConfirmationScreenProps {
    serviceId: string;
    preselectedNurseId?: number | null;
    onBack: () => void;
    onConfirm: (details: BookingConfirmationDetails) => void;
    userAddress: string;
}

const InfoRow = ({ label, value, valueClass = 'text-gray-800' }: {label: string, value: React.ReactNode, valueClass?: string}) => (
    <li className="flex justify-between items-center py-2">
        <span className="text-gray-500">{label}</span>
        <span className={`font-semibold text-right ${valueClass}`}>{value}</span>
    </li>
);

const BookingConfirmationScreen: React.FC<BookingConfirmationScreenProps> = ({ serviceId, preselectedNurseId, onBack, onConfirm, userAddress }) => {
    const [service, setService] = useState<Service | null>(null);
    const [loading, setLoading] = useState(true);
    const [bookingDate, setBookingDate] = useState('');
    const [bookingTime, setBookingTime] = useState('');
    const [availableNurses, setAvailableNurses] = useState<Nurse[]>([]);
    const [selectedNurseId, setSelectedNurseId] = useState<number | 'auto'>('auto');
    const [patientCount, setPatientCount] = useState(1);
    const [bookingHours, setBookingHours] = useState(2);
    const [notes, setNotes] = useState('');
    const [bookingFor, setBookingFor] = useState<'self' | 'other'>('self');
    const [recipientDetails, setRecipientDetails] = useState({ name: '', phone: '', relation: '', address: '' });


    useEffect(() => {
        setLoading(true);
        const today = new Date();
        const yyyy = today.getFullYear();
        const mm = String(today.getMonth() + 1).padStart(2, '0');
        const dd = String(today.getDate()).padStart(2, '0');
        setBookingDate(`${yyyy}-${mm}-${dd}`);

        const hh = String(today.getHours()).padStart(2, '0');
        const min = String(today.getMinutes()).padStart(2, '0');
        setBookingTime(`${hh}:${min}`);
        
        if (preselectedNurseId) {
            setSelectedNurseId(preselectedNurseId);
        } else {
            setSelectedNurseId('auto');
        }

        const foundService = allServicesData.find(s => s.id === serviceId);
        setService(foundService || null);
        
        if (foundService) {
            const filteredNurses = mockNurses.filter(nurse => nurse.availability === 'available');
            setAvailableNurses(filteredNurses);
        } else {
            setAvailableNurses([]);
        }

        setLoading(false);
    }, [serviceId, preselectedNurseId]);

    const handleRecipientDetailChange = (field: keyof typeof recipientDetails, value: string) => {
        setRecipientDetails(prev => ({ ...prev, [field]: value }));
    };

    const isHourlyService = service?.priceRange.includes('/ ุณุงุนุฉ');
    const servicePrice = parseInt(service?.priceRange.split(' ')[0].replace(/,/g, '') || '1000');

    // Calculate distance and transportation cost
    let distanceInKm: number;
    let selectedNurseForCalc: Nurse | undefined;

    if (selectedNurseId === 'auto') {
        // For auto-assign, find the available nurse with the shortest arrival time
        selectedNurseForCalc = [...availableNurses].sort((a, b) => (a.arrivalTime || 999) - (b.arrivalTime || 999))[0];
    } else {
        selectedNurseForCalc = mockNurses.find(n => n.id === selectedNurseId);
    }
    
    // Assuming average speed of 30 km/h (0.5 km/minute) to estimate distance from ETA
    distanceInKm = selectedNurseForCalc?.arrivalTime ? selectedNurseForCalc.arrivalTime * 0.5 : 5; // Default distance 5km if no nurse/ETA
    const transportationCost = Math.round(distanceInKm * 1000);

    const serviceSubtotal = isHourlyService
        ? servicePrice * bookingHours * patientCount
        : servicePrice * patientCount;
    
    const totalCost = serviceSubtotal + transportationCost;

    const handleConfirmClick = () => {
        if (!bookingDate || !bookingTime) {
            alert('ุงูุฑุฌุงุก ุชุญุฏูุฏ ุงูุชุงุฑูุฎ ูุงูููุช');
            return;
        }
        if (bookingFor === 'other') {
            const { name, phone, relation, address } = recipientDetails;
            if (!name || !phone || !relation || !address) {
                alert('ุงูุฑุฌุงุก ุฅููุงู ุฌููุน ุจูุงูุงุช ุงููุณุชููุฏ.');
                return;
            }
        }
        if (!service) return;

        const selectionType = selectedNurseId === 'auto' ? 'auto' : 'manual';
        onConfirm({
            selectionType,
            service,
            patientCount,
            totalCost,
            date: bookingDate,
            time: bookingTime,
            notes,
            bookingFor,
            recipientDetails: bookingFor === 'other' ? recipientDetails : undefined,
            hours: isHourlyService ? bookingHours : undefined,
        });
    };
    
    const preselectedNurse = preselectedNurseId ? mockNurses.find(n => n.id === preselectedNurseId) : null;

    if (loading) {
        return (
             <div className="flex flex-col h-full bg-white">
                <div className="p-4 flex items-center border-b"><button onClick={onBack} className="p-2 rounded-full hover:bg-gray-100"><ArrowRightIcon className="w-6 h-6 text-gray-600" /></button><h1 className="text-xl font-bold text-gray-800 mx-auto">ุชุฃููุฏ ุงูุญุฌุฒ</h1></div>
                <LoadingSpinner />
            </div>
        );
    }

    if (!service) {
        return <div className="p-8 text-center text-red-500">ูู ูุชู ุงูุนุซูุฑ ุนูู ุงูุฎุฏูุฉ.</div>;
    }

    return (
        <div className="flex flex-col h-full bg-gray-50">
            <div className="p-4 flex items-center border-b bg-white sticky top-0 z-10">
                <button onClick={onBack} className="p-2 rounded-full hover:bg-gray-100"><ArrowRightIcon className="w-6 h-6 text-gray-600" /></button>
                <h1 className="text-xl font-bold text-gray-800 mx-auto">ุชุฃููุฏ ุงูุญุฌุฒ</h1>
            </div>

            <div className="flex-grow overflow-y-auto p-4 md:p-6 space-y-4 lg:space-y-0 lg:grid lg:grid-cols-5 lg:gap-6 lg:items-start">
                {/* Left Column */}
                <div className="space-y-4 lg:col-span-2">
                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <h3 className="font-bold text-lg text-gray-800 mb-3">ููู ูุฐู ุงูุฎุฏูุฉุ</h3>
                        <div className="flex rounded-full bg-gray-100 p-1">
                            <button onClick={() => setBookingFor('self')} className={`w-full py-2 rounded-full font-semibold transition-colors ${bookingFor === 'self' ? 'bg-white text-cyan-600 shadow' : 'text-gray-500'}`}>ูููุณู</button>
                            <button onClick={() => setBookingFor('other')} className={`w-full py-2 rounded-full font-semibold transition-colors ${bookingFor === 'other' ? 'bg-white text-cyan-600 shadow' : 'text-gray-500'}`}>ูุดุฎุต ุขุฎุฑ</button>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border flex items-center gap-4">
                        <div className="flex-shrink-0 w-12 h-12 flex items-center justify-center bg-cyan-100 text-cyan-600 rounded-lg">
                            {service.icon}
                        </div>
                        <div className="flex-grow">
                            <h3 className="font-semibold text-gray-800">{service.name}</h3>
                            <p className="text-sm text-gray-500">{service.category}</p>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <h3 className="font-bold text-lg text-gray-800 mb-3">ุชุญุฏูุฏ ุงูููุนุฏ</h3>
                        <div className="grid grid-cols-2 gap-4">
                            <div className="relative">
                                <input type="date" value={bookingDate} onChange={e => setBookingDate(e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500" />
                                <CalendarDaysIcon className="absolute right-2 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
                            </div>
                            <div className="relative">
                                <input type="time" value={bookingTime} onChange={e => setBookingTime(e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500" />
                                <ClockIcon className="absolute right-2 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400" />
                            </div>
                        </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <h3 className="font-bold text-lg text-gray-800 mb-3">ุนุฏุฏ ุงููุฑุถู</h3>
                        <div className="flex items-center justify-between">
                            <div className="flex items-center gap-3">
                                <UserGroupIcon className="w-6 h-6 text-cyan-600"/>
                                <span className="font-semibold text-gray-700">ูู ุดุฎุต ุณูุญุตู ุนูู ุงูุฎุฏูุฉุ</span>
                            </div>
                            <div className="flex items-center gap-3">
                                <button onClick={() => setPatientCount(p => Math.max(1, p - 1))} disabled={patientCount <= 1} className="w-8 h-8 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full font-bold text-lg disabled:opacity-50" aria-label="Decrease patient count">-</button>
                                <span className="font-bold text-lg w-8 text-center" aria-live="polite">{patientCount}</span>
                                <button onClick={() => setPatientCount(p => p + 1)} className="w-8 h-8 flex items-center justify-center bg-cyan-500 text-white rounded-full font-bold text-lg" aria-label="Increase patient count">+</button>
                            </div>
                        </div>
                    </div>

                    {isHourlyService && (
                        <div className="bg-white p-4 rounded-lg shadow-sm border">
                            <h3 className="font-bold text-lg text-gray-800 mb-3">ูุฏุฉ ุงูุฎุฏูุฉ</h3>
                            <div className="flex items-center justify-between">
                                <div className="flex items-center gap-3">
                                    <ClockIcon className="w-6 h-6 text-cyan-600"/>
                                    <span className="font-semibold text-gray-700">ุนุฏุฏ ุงูุณุงุนุงุช ุงููุทููุจุฉ</span>
                                </div>
                                <div className="flex items-center gap-3">
                                    <button onClick={() => setBookingHours(h => Math.max(1, h - 1))} disabled={bookingHours <= 1} className="w-8 h-8 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full font-bold text-lg disabled:opacity-50" aria-label="Decrease hours">-</button>
                                    <span className="font-bold text-lg w-8 text-center" aria-live="polite">{bookingHours}</span>
                                    <button onClick={() => setBookingHours(h => h + 1)} className="w-8 h-8 flex items-center justify-center bg-cyan-500 text-white rounded-full font-bold text-lg" aria-label="Increase hours">+</button>
                                </div>
                            </div>
                        </div>
                    )}
                </div>

                {/* Right Column */}
                <div className="space-y-4 lg:col-span-3">
                    {bookingFor === 'other' && (
                        <div className="bg-white p-4 rounded-lg shadow-sm border space-y-3">
                            <h3 className="font-bold text-lg text-gray-800">ุจูุงูุงุช ุงููุณุชููุฏ</h3>
                            <div className="relative"><HeroUserIcon className="absolute top-1/2 -translate-y-1/2 right-3 w-5 h-5 text-gray-400" /><input type="text" placeholder="ุงูุงุณู ุงููุงูู ูููุณุชููุฏ" value={recipientDetails.name} onChange={e => handleRecipientDetailChange('name', e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500" /></div>
                            <div className="relative"><HeroPhoneIcon className="absolute top-1/2 -translate-y-1/2 right-3 w-5 h-5 text-gray-400" /><input type="tel" placeholder="ุฑูู ุฌูุงู ุงููุณุชููุฏ" value={recipientDetails.phone} onChange={e => handleRecipientDetailChange('phone', e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500" /></div>
                            <div className="relative"><UsersIcon className="w-5 h-5 text-gray-400 absolute top-1/2 right-3 -translate-y-1/2" /><select value={recipientDetails.relation} onChange={e => handleRecipientDetailChange('relation', e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500 appearance-none"><option value="" disabled>ุตูุฉ ุงููุฑุงุจุฉ</option><option>ุฃุจ</option><option>ุฃู</option><option>ุฃุฎ/ุฃุฎุช</option><option>ุฒูุฌ/ุฒูุฌุฉ</option><option>ุงุจู/ุงุจูุฉ</option><option>ุตุฏูู/ุฉ</option><option>ุขุฎุฑ</option></select></div>
                            <div className="relative"><MapPinIcon className="w-5 h-5 text-gray-400 absolute top-3 right-3" /><textarea placeholder="ุนููุงู ุงููุณุชููุฏ ุจุงูุชูุตูู" value={recipientDetails.address} onChange={e => handleRecipientDetailChange('address', e.target.value)} className="w-full bg-gray-50 border-gray-300 rounded-lg p-2 pr-10 text-sm focus:ring-cyan-500 focus:border-cyan-500 h-20" /></div>
                            <button onClick={() => handleRecipientDetailChange('address', userAddress)} className="text-sm font-semibold text-cyan-600 hover:underline">ุงุณุชุฎุฏุงู ุนููุงูู ุงูุญุงูู</button>
                        </div>
                    )}
                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <h3 className="font-bold text-lg text-gray-800 mb-3">{preselectedNurse ? "ุงูููุฑุถ/ุฉ ุงููุญุฏุฏ/ุฉ" : "ุงุฎุชูุงุฑ ุงูููุฑุถ/ุฉ"}</h3>
                        {preselectedNurse ? (
                             <div className="p-3 border-2 rounded-xl bg-cyan-50 border-cyan-500 flex items-center gap-4"><img src={preselectedNurse.img} alt={preselectedNurse.name} className="w-16 h-16 rounded-full border-2 border-white" /><div><h4 className="font-bold text-gray-800">{preselectedNurse.name}</h4><div className="flex items-center gap-1 mt-1"><StarIcon className="w-4 h-4 text-yellow-400" /><span className="text-sm font-bold text-gray-700">{preselectedNurse.rating}</span></div></div></div>
                        ) : (
                            <div className="grid grid-flow-col auto-cols-[10.5rem] md:grid-flow-row sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-3 overflow-x-auto pb-2 -mx-4 px-4 md:mx-0 md:px-0">
                                <button onClick={() => setSelectedNurseId('auto')} className={`relative flex-shrink-0 w-40 text-center p-3 border-2 rounded-xl transition-all duration-200 ${selectedNurseId === 'auto' ? 'border-cyan-500 bg-cyan-50' : 'border-gray-200 bg-white'}`} aria-pressed={selectedNurseId==='auto'}><div className="w-16 h-16 flex items-center justify-center bg-gray-100 rounded-full mx-auto mb-2"><SparklesIcon className="w-8 h-8 text-cyan-500" /></div><h4 className="font-bold text-gray-800 text-sm">ุงูุชุนููู ุงูุชููุงุฆู</h4><p className="text-xs text-gray-500 mt-1">ุณูุฎุชุงุฑ ูู ุฃูุถู ููุฑุถ ูุชุงุญ</p>{selectedNurseId === 'auto' && <div className="absolute top-2 left-2 bg-cyan-500 text-white rounded-full p-0.5"><CheckCircleIcon className="w-5 h-5" /></div>}</button>
                                {availableNurses.map(nurse => (<button key={nurse.id} onClick={() => setSelectedNurseId(nurse.id)} className={`relative flex-shrink-0 w-40 text-center p-3 border-2 rounded-xl transition-all duration-200 ${selectedNurseId === nurse.id ? 'border-cyan-500 bg-cyan-50' : 'border-gray-200 bg-white'}`} aria-pressed={selectedNurseId === nurse.id}><img src={nurse.img} alt={nurse.name} className="w-16 h-16 rounded-full mx-auto mb-2 border-2 border-gray-100" /><h4 className="font-bold text-gray-800 text-sm truncate">{nurse.name}</h4><div className="flex items-center justify-center gap-1 mt-1"><StarIcon className="w-4 h-4 text-yellow-400" /><span className="text-xs font-bold text-gray-700">{nurse.rating}</span></div>{selectedNurseId === nurse.id && <div className="absolute top-2 left-2 bg-cyan-500 text-white rounded-full p-0.5"><CheckCircleIcon className="w-5 h-5" /></div>}</button>))}
                            </div>
                        )}
                    </div>
                    
                    <div className="bg-white p-4 rounded-lg shadow-sm border">
                        <h2 className="font-bold text-lg text-gray-800 mb-1">ููุฎุต ุงูุฏูุน</h2>
                        <ul className="text-sm">
                             <InfoRow label="ุนููุงู ุชูุฏูู ุงูุฎุฏูุฉ" value={bookingFor === 'self' ? 'ุนููุงูู ุงูุญุงูู' : recipientDetails.address || 'ูู ูุญุฏุฏ'} />
                             {bookingFor === 'other' && recipientDetails.name && <InfoRow label="ุงููุณุชููุฏ" value={recipientDetails.name} />}
                             <InfoRow 
                                label={isHourlyService ? `ุชูููุฉ ุงูุฎุฏูุฉ (${bookingHours} ุณ ร ${patientCount})` : `ุชูููุฉ ุงูุฎุฏูุฉ (ร${patientCount})`}
                                value={`${serviceSubtotal.toLocaleString('ar-SA')} ๏ทผ`}
                             />
                             <InfoRow label={`ุชูุงููู ุงูููุงุตูุงุช (${distanceInKm.toFixed(1)} ูู)`} value={`${transportationCost.toLocaleString('ar-SA')} ๏ทผ`} />
                             <li className="flex justify-between items-center py-2 mt-2 border-t border-dashed"><span className="font-bold text-gray-800">ุงูุฅุฌูุงูู ุงููุชููุน</span><span className="font-bold text-cyan-600 text-lg">{totalCost.toLocaleString('ar-SA')} ๏ทผ</span></li>
                        </ul>
                    </div>
                </div>
            </div>
            
            <div className="p-4 bg-white border-t sticky bottom-0">
                <button onClick={handleConfirmClick} className="w-full bg-cyan-500 text-white py-3 rounded-lg font-bold text-lg shadow-md hover:bg-cyan-600 transition">
                    ุชุฃููุฏ ุงูุญุฌุฒ
                </button>
            </div>
        </div>
    );
};

export default BookingConfirmationScreen;